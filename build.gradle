import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
	id 'org.springframework.boot' version "$springBootVersion" apply false
	id 'eclipse'
	id 'idea'
}

ext {
	springdocOpenApi = '1.5.4'
	liquibaseCore = '4.3.1'
}

allprojects {
	repositories {
		mavenCentral()
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'io.spring.dependency-management'

	sourceCompatibility = JavaVersion.VERSION_11
	group = 'com.think'
	version = '0.0.1-SNAPSHOT'

	dependencyManagement {
		imports {
			mavenBom SpringBootPlugin.BOM_COORDINATES
		}
	}

	test {
		useJUnitPlatform()
	}

	dependencies {
		testImplementation "org.assertj:assertj-core"
		testImplementation "org.mockito:mockito-core"
		testImplementation "org.mockito:mockito-junit-jupiter"
		testImplementation "org.junit.jupiter:junit-jupiter-api"
		testImplementation "org.junit.jupiter:junit-jupiter-params"
		testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
	}
}

project(':domain') {
	dependencies {
		compileOnly "org.projectlombok:lombok"
		annotationProcessor "org.projectlombok:lombok"
	}
}

project(':simple-application') {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'application'

	sourceSets {
		integrationTest {
			compileClasspath += sourceSets.main.output
			runtimeClasspath += sourceSets.main.output
		}
	}

	configurations {
		integrationTestImplementation.extendsFrom implementation
		integrationTestRuntimeOnly.extendsFrom runtimeOnly
	}

	dependencies {
		implementation project(':domain')

		compileOnly "org.projectlombok:lombok"
		annotationProcessor "org.projectlombok:lombok"
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot-starter-hateoas'

		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		runtimeOnly 'com.h2database:h2'

		implementation "org.springdoc:springdoc-openapi-ui:$springdocOpenApi"
		implementation "org.springdoc:springdoc-openapi-hateoas:$springdocOpenApi"
		implementation "org.liquibase:liquibase-core:$liquibaseCore"

		integrationTestRuntimeOnly 'com.h2database:h2'
		integrationTestImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
		integrationTestImplementation 'org.springframework.security:spring-security-test'
	}

	task integrationTest(type: Test) {
		description = 'Run integration tests.'
		group = 'verification'

		useJUnitPlatform()

		testClassesDirs = sourceSets.integrationTest.output.classesDirs
		classpath = sourceSets.integrationTest.runtimeClasspath
		shouldRunAfter test
	}

	check.dependsOn integrationTest
}


